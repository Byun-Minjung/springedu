<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.RboardDAO-mapper">

<!-- 댓글 작성 -->
<insert id="write"
				parameterType="RboardVO"> <!-- 원래는 com.kh~~ 다 써줘야 하지만, mybatis-config에서 짧게 쓸 수 있도록 설정해 줌 -->
				
	insert into rboard (
		rnum, 
		bnum, 
		rid, 
		rnickname,
		rcontent, 
		rgroup, 
		rstep, 
		rindent)
	values(
		rboard_rnum_seq.nextval, 
		#{bnum}, 
		#{rid}, 
		#{rnickname},
		#{rcontent}, 
		rboard_rnum_seq.currval, 
		0, 
		0)
	<!-- 댓글 생성되고, 생성된 번호를 읽어화서 RboardVO.setRnum()에 넣어줌 -->	
	<selectKey keyProperty="rnum" resultType="long" order="AFTER">
		select RBOARD_RNUM_SEQ.currval
		  from dual
	</selectKey>

</insert>

<!-- 댓글 수정 -->
<update id="modify"
				parameterType="RboardVO">
	
	update rboard
	   set rcontent = #{rcontent},
	       rudate   = systimestamp
	 where rnum     = #{rnum}
	 	 and rid      = #{rid}
	 
</update>


<!-- 댓글 삭제 -->
<delete id="delete"
				parameterType="long">

	delete from rboard where rnum = ${rnum}
	
</delete>

<!-- 댓글 조회 -->
<select id="replyView"
				parameterType="long"
				resultType="RboardVO">
				
	select rnum, bnum, rid, rnickname, rcontent, 
				 rcdate, rudate,
				 rgroup, rstep, rindent,
 				 prnum, prid, prnickname
	  from rboard
	 where rnum = #{rnum}  
	 			
</select>

<!-- 댓글 목록 -->
<select id="list"
				parameterType="map"
				resultType="RboardVO">

		select 
		    t1.rnum,
		    t1.bnum,
		    t1.rid, t1.rnickname, 
		    t1.rcontent,	
		    t1.rcdate, 
		    t1.rgroup, t1.rstep, t1.rindent,
		    t1.prnum, t1.prid,  t1.prnickname,
		    nvl(t2.good,0) rgood,
		    nvl(t2.bad,0)  rbad,
		    t1.pic, t1.ftype
		  from
		     ( select   		
		               rnum,
		               bnum,
		               rid, rnickname, 
		               rcontent,	
		               rcdate, 
		               rgroup, rstep, rindent,
		               prnum, prid, prnickname,
		               pic, ftype
		        from (  select  row_number() over( order by rgroup desc, rstep asc) as num,
		                        t1.rnum,
		                        t1.bnum,
		                        t1.rid, t1.rnickname, 
		                        t1.rcontent,	
		                        t1.rcdate, 
		                        t1.rgroup, t1.rstep, t1.rindent,
		                        t1.prnum,  t1.prid,  t1.prnickname,
		                        t2.pic, t2.ftype
		                  from  rboard t1, member t2
		                 where  t1.rid = t2.id
		                 	 and 	t1.bnum = #{bnum} 
		             )
		      where  num between #{startRec} and #{endRec} ) t1,
		     ( select rnum, nvl(count(decode(vote,'GOOD',1)),0) good, nvl(count(decode(vote,'BAD',2)),0) bad
		         from rboard_vote
		      group by rnum ) t2
		   where t1.rnum = t2.rnum(+)
 

</select>

<!-- 대댓글 작성 -->
<insert id="reply"
				parameterType="RboardVO">

	insert into rboard (
		rnum, 
		bnum, 
		rid, 
		rnickname,
		rcontent, 
		rgroup, 
		rstep, 
		rindent,
		prnum,
		prid,
		prnickname)
	values(
		rboard_rnum_seq.nextval, 
		#{bnum}, 
		#{rid}, 
		#{rnickname},
		#{rcontent}, 
		#{rgroup}, 
		#{rstep} + 1, 
		#{rindent} + 1,
		#{prnum},
		#{prid},
		#{prnickname})

</insert>

<!-- 이전 댓글 step 업데이트 -->
<update id="updateStep"
				parameterType="map">
	update rboard
	   set rstep = rstep + 1
	 where rgroup = #{rgroup}
	   and rstep > #{rstep}
</update>

<!-- 댓글 호감, 비호감 -->
<!-- 투표 이력 없으면 추가, 있으면 변경 -->
<!-- <![CDATA[ ]]> : SQL내용에 <, >, 특수문자를 XML파서가 해석하지 않고 문자열로 인식함 -->
<update id="vote"
				parameterType="VoteVO">
<![CDATA[			
MERGE INTO rboard_vote
USING DUAL
   ON (rnum=#{rnum} AND bnum=#{bnum} AND rid=#{rid})
--키 값이 존재하는 경우   
WHEN MATCHED THEN  
     UPDATE SET vote = #{vote}
--키 값이 없는 경우
WHEN NOT MATCHED THEN
     INSERT (rnum, bnum, rid, vote) 
     VALUES (#{rnum}, #{bnum}, #{rid}, #{vote})
]]>     
</update>



<!-- 게시글 총 레코드 수 -->
<select id="totalRecordCount"
				parameterType="long"
				resultType="int">

	 select count(*) as totalRecCnt
	   from rboard 
	  where bnum = #{bnum}
</select>

<select id="searchedTotalRecordCount"
				parameterType="map"
				resultType="int">

	 select count(*) as totalRecCnt
	   from rboard t1
	  where t1.bnum = #{bnum}
 	 <if test="searchType != null" >
 	 	 and  
 	 <choose>
  	 		<!-- 내용 -->
 	 		<when test="searchType == 'C'.toString()">
 				 t1.rcontent  like '%' || #{keyword} || '%'	             	 		
 	 		</when>
 	 		<!-- 별칭 -->
 	 		<when test="searchType == 'N'.toString()">
 			   t1.rnickname  like '%' || #{keyword} || '%'           	 		
 	 		</when>
 	 		<!-- 아이디 -->
 	 		<when test="searchType == 'I'.toString()">
 				 t1.rid  like '%' || #{keyword} || '%'           	 		
 	 		</when>
 	 		<!-- 전체 -->
   	 	<when test="searchType == 'A'.toString()">		 		
		     t1.rcontent  like '%' || #{keyword} || '%' or	            	 	
		     t1.rnickname like '%' || #{keyword} || '%' or	            	 	
		     t1.rid  		 like '%' || #{keyword} || '%' 	            	 	
   	 	</when>
 	 </choose>
 	 </if>
</select>

</mapper>


















